{"ast":null,"code":"import axios from 'axios';\nexport class AccountsRepository {\n  constructor() {\n    this.url = 'https://localhost:8000/users';\n    this.config = {};\n  }\n\n  getAccounts(params) {\n    var config = this.config;\n    config.params = params;\n    return new Promise((resolve, reject) => {\n      axios.get(`${this.url}`, config).then(x => resolve(x.data)).catch(x => {\n        alert(x); // handle error\n\n        reject(x);\n      });\n    });\n  }\n\n  getAccountById(id) {\n    return new Promise((resolve, reject) => {\n      axios.get(`${this.url}/${id}`, this.config).then(x => resolve(x.data)).catch(x => {\n        alert(x); // handle error\n\n        reject(x);\n      });\n    });\n  }\n\n  addAccount(account) {\n    return new Promise((resolve, reject) => {\n      axios.post(`${this.url}`, account, this.config).then(x => resolve(x.data)).catch(x => {\n        alert(x); // handle error\n\n        reject(x);\n      });\n    });\n  }\n\n  updateAccount(id, account) {\n    return new Promise((resolve, reject) => {\n      axios.put(`${this.url}/${id}`, account, this.config).then(x => resolve(x.data)).catch(x => {\n        alert(x); // handle error\n\n        reject(x);\n      });\n    });\n  }\n\n  deleteAccount(id) {\n    return new Promise((resolve, reject) => {\n      axios.delete(`${this.url}/${id}`, this.config).then(x => resolve(x.data)).catch(x => {\n        alert(x); // handle error\n\n        reject(x);\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["/usr/src/app/src/Api/AccountsRepository.js"],"names":["axios","AccountsRepository","url","config","getAccounts","params","Promise","resolve","reject","get","then","x","data","catch","alert","getAccountById","id","addAccount","account","post","updateAccount","put","deleteAccount","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nexport class AccountsRepository {\n\n    url = 'https://localhost:8000/users'\n\n    config = {\n    };\n\n    getAccounts(params) {\n        var config = this.config;\n        config.params = params;\n        return new Promise((resolve, reject) => {\n            axios.get(`${this.url}`, config)\n                .then(x => resolve(x.data))\n                .catch(x => {\n                    alert(x); // handle error\n                    reject(x);\n                });\n        });\n    }\n\n    getAccountById(id) {\n        return new Promise((resolve, reject) => {\n            axios.get(`${this.url}/${id}`, this.config)\n                .then(x => resolve(x.data))\n                .catch(x => {\n                    alert(x); // handle error\n                    reject(x);\n                });\n        });\n    }\n\n    addAccount(account) {\n        return new Promise((resolve, reject) => {\n            axios.post(`${this.url}`, account, this.config)\n                .then(x => resolve(x.data))\n                .catch(x => {\n                    alert(x); // handle error\n                    reject(x);\n                });\n        });\n    }\n\n    updateAccount(id, account) {\n        return new Promise((resolve, reject) => {\n            axios.put(`${this.url}/${id}`, account, this.config)\n                .then(x => resolve(x.data))\n                .catch(x => {\n                    alert(x); // handle error\n                    reject(x);\n                });\n        });\n    }\n\n    deleteAccount(id) {\n        return new Promise((resolve, reject) => {\n            axios.delete(`${this.url}/${id}`, this.config)\n                .then(x => resolve(x.data))\n                .catch(x => {\n                    alert(x); // handle error\n                    reject(x);\n                });\n        });\n    }\n\n}"]},"metadata":{},"sourceType":"module"}