{"ast":null,"code":"var _jsxFileName = \"/Users/ericmiao/Documents/NOverdose/frontend/src/Components/mainPage.jsx\";\nimport React from 'react';\nimport ProfileCard from \"./profileCard\";\nimport DrugCard from \"./drugCard\";\nimport NavBar from './navBar';\nimport drugs from './TempData/drug';\nimport { NoverdoseRepo } from '../Api/NoverdoseRepo';\nimport { Redirect } from 'react-router-dom';\nimport User from '../models/user';\nexport default class MainPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.repo = new NoverdoseRepo();\n\n    this.delete = name => {\n      let newDrugList = this.state.allDrugs.filter(function (obj) {\n        return obj.name !== name;\n      });\n      this.setState({\n        allDrugs: newDrugList\n      });\n    };\n\n    this.renderUserPrescriptions = () => {\n      return this.state.allDrugs.map((x, y) => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(DrugCard, Object.assign({\n        key: y\n      }, x, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-lg disabled\",\n        style: {\n          \"margin\": \"auto\"\n        },\n        onClick: this.delete(x.name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, \"Delete Prescription\")));\n    };\n\n    this.setPrescriptionRedirect = () => {\n      this.setState({\n        addPrescription: true\n      });\n    };\n\n    this.renderPrescriptionRedirect = () => {\n      if (this.state.addPrescription) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: '/prescription',\n            state: {\n              id: this.state.id\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 20\n          }\n        });\n      }\n    };\n\n    this.state = {\n      id: '',\n      name: '',\n      email: '',\n      password: '',\n      birthday: '1995-01-01',\n      medications: [\"MEDICATIONS1\", \"MEDICATIONS2\", \"MEDICATIONS3\"],\n      profilePicUrl: 'https://quindry.com/wp-content/gallery/people/Philadelphia-business-headshot-36-Square.jpg',\n      addPrescription: false,\n      allDrugs: drugs\n    };\n  }\n\n  getUser(id) {\n    console.log(\"GETTING USER\");\n    let t = this.repo.getUserById(id);\n    console.log(t);\n    console.log(JSON.stringify(t));\n  }\n\n  onDrugAdded(newDrugs) {\n    this.setState(previousState => {\n      let index = previousState.product.medications.indexOf(newDrugs);\n\n      if (index !== -1) {\n        return previousState;\n      }\n\n      previousState.product.medications.push(newDrugs);\n      return previousState;\n    });\n  }\n\n  componentWillMount() {\n    let id = +this.props.match.params.id;\n\n    if (id) {\n      this.repo.getUserById(id).then(curuser => {\n        this.setState({\n          id: curuser.user[0].id,\n          name: curuser.user[0].name,\n          email: curuser.user[0].email,\n          password: curuser.user[0].password\n        });\n      });\n    }\n  }\n\n  render() {\n    var sampleUser = new User(this.state.id, this.state.name, this.state.email, this.state.password, this.state.birthday, this.state.medications, this.state.profilePicUrl);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavBar, {\n      id: this.props.match.params.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"DrugCard\",\n      style: {\n        fontFamily: \"sans-serif\",\n        textAlign: \"center\",\n        background: \"whitesmoke\",\n        marginBottom: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ProfileCard, {\n      user: sampleUser,\n      cardColor: \"#9EC0FE\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, this.state.name, \"'s Prescription\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, this.renderPrescriptionRedirect(), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-lg \",\n      onClick: () => this.setPrescriptionRedirect(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, \"Add New Prescription\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"allCards col\",\n      style: {\n        columns: \"2\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, this.renderUserPrescriptions()));\n  }\n\n}","map":{"version":3,"sources":["/Users/ericmiao/Documents/NOverdose/frontend/src/Components/mainPage.jsx"],"names":["React","ProfileCard","DrugCard","NavBar","drugs","NoverdoseRepo","Redirect","User","MainPage","Component","constructor","props","repo","delete","name","newDrugList","state","allDrugs","filter","obj","setState","renderUserPrescriptions","map","x","y","setPrescriptionRedirect","addPrescription","renderPrescriptionRedirect","pathname","id","email","password","birthday","medications","profilePicUrl","getUser","console","log","t","getUserById","JSON","stringify","onDrugAdded","newDrugs","previousState","index","product","indexOf","push","componentWillMount","match","params","then","curuser","user","render","sampleUser","fontFamily","textAlign","background","marginBottom","columns"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ProfileCard from \"./profileCard\";\nimport DrugCard from \"./drugCard\";\nimport NavBar from './navBar';\nimport drugs from './TempData/drug';\nimport { NoverdoseRepo } from '../Api/NoverdoseRepo';\nimport { Redirect} from 'react-router-dom';\nimport User from '../models/user';\n\nexport default class MainPage extends React.Component {\n    repo = new NoverdoseRepo();\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: '',\n            name: '',\n            email: '',\n            password: '',\n            birthday: '1995-01-01',\n            medications: [ \"MEDICATIONS1\", \"MEDICATIONS2\", \"MEDICATIONS3\"],\n            profilePicUrl: 'https://quindry.com/wp-content/gallery/people/Philadelphia-business-headshot-36-Square.jpg',\n            addPrescription: false,\n            allDrugs: drugs\n        };\n    }\n\n\n    getUser(id) {\n        console.log(\"GETTING USER\")\n        let t = this.repo.getUserById(id);\n        console.log(t);\n        console.log(JSON.stringify(t))\n    }\n\n    onDrugAdded(newDrugs) {\n        this.setState(previousState => {\n            let index = previousState.product.medications.indexOf(newDrugs)\n            if (index !== -1) {\n                return previousState;\n            }\n            previousState.product.medications.push(newDrugs);\n            return previousState;\n        });\n    }\n\n    componentWillMount() {\n        let id = +this.props.match.params.id;\n        if (id) {\n            this.repo.getUserById(id)\n                .then(curuser => {\n                        this.setState({\n                            id: curuser.user[0].id,\n                            name: curuser.user[0].name,\n                            email: curuser.user[0].email,\n                            password: curuser.user[0].password,\n                        })\n                    }\n                );\n        }\n    }\n\n\n    delete=(name)=> {\n        let newDrugList = this.state.allDrugs.filter(function( obj ) {\n            return obj.name !== name;\n        });\n        this.setState({allDrugs:newDrugList});\n    }\n\n    renderUserPrescriptions=()=>{\n       return(\n           this.state.allDrugs.map((x, y) =>\n            <div className=\"row\">\n                <DrugCard key={y} {...x} />\n                <button className=\"btn btn-secondary btn-lg disabled\"\n                        style={{ \"margin\": \"auto\" }}\n                        onClick={this.delete(x.name)}>\n                    Delete Prescription\n                </button>\n            </div>\n        )\n        );\n    }\n\n\n    setPrescriptionRedirect = () => {\n        this.setState({\n            addPrescription: true\n        })\n    }\n\n\n    renderPrescriptionRedirect = () => {\n        if (this.state.addPrescription) {\n            return <Redirect\n                to={{\n                    pathname:'/prescription',\n                    state: {\n                    id: this.state.id\n                }\n                }}\n            />\n        }\n    }\n\n    render() {\n        var sampleUser = new User\n                                (\n                                    this.state.id,\n                                    this.state.name,\n                                    this.state.email,\n                                    this.state.password,\n                                    this.state.birthday,\n                                    this.state.medications,\n                                    this.state.profilePicUrl\n                                );\n\n        return (\n            <>\n                <NavBar id={this.props.match.params.id}/>\n                <div className=\"DrugCard\" style={{\n                    fontFamily: \"sans-serif\",\n                    textAlign: \"center\",\n                    background: \"whitesmoke\",\n                    marginBottom: \"20px\"\n                }}>\n                    <ProfileCard user={sampleUser}\n                                 cardColor={\"#9EC0FE\"} />\n                    <h2 style={{ textAlign: \"center\"}}>\n                        {this.state.name}'s Prescription\n                    </h2>\n                </div>\n                <div className=\"text-center\">\n                    {this.renderPrescriptionRedirect()}\n                    <button className=\"btn btn-primary btn-lg \" onClick={() => this.setPrescriptionRedirect()}>Add New Prescription</button>\n                </div>\n                <div className=\"allCards col\"\n                     style={{ columns: \"2\" }}>\n                    {this.renderUserPrescriptions()}\n                </div>\n            </>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}