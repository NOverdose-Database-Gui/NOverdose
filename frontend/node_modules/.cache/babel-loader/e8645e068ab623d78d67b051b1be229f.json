{"ast":null,"code":"var _jsxFileName = \"/Users/ericmiao/Desktop/Programming/NOverdose/frontend/src/Components/mainPage.jsx\";\nimport React from 'react';\nimport ProfileCard from \"./profileCard\";\nimport DrugCard from \"./drugCard\";\nimport NavBar from './navBar';\nimport drugs from './TempData/drug';\nimport { NoverdoseRepo } from '../Api/NoverdoseRepo';\nimport { Redirect } from 'react-router-dom';\nimport User from '../models/user';\nimport Drug from '../models/drug';\nexport default class MainPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.repo = new NoverdoseRepo();\n\n    this.delete = name => {\n      console.log(\"deleting[\" + name + \"]\");\n      let list = this.state.pastPrescriptions.concat(name);\n      this.setState({\n        pastPrescriptions: list\n      });\n      let newDrugList = this.state.currentPrescriptions.filter(function (obj) {\n        return obj.name !== name;\n      });\n      this.setState({\n        currentPrescriptions: newDrugList\n      });\n    };\n\n    this.renderUserPrescriptions = () => {\n      return this.state.currentPrescriptions.map((x, y) => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(DrugCard, Object.assign({\n        key: y\n      }, x, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-lg disabled \",\n        style: {\n          margin: \"auto\"\n        },\n        onClick: () => this.delete(x.name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }, \"Delete Prescription\")));\n    };\n\n    this.setPrescriptionRedirect = () => {\n      this.setState({\n        addPrescription: true\n      });\n    };\n\n    this.renderPrescriptionRedirect = () => {\n      let newPath = '/search/' + this.state.id;\n\n      if (this.state.addPrescription) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: newPath,\n            state: {\n              id: this.state.id\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 20\n          }\n        });\n      }\n    };\n\n    this.ifShowMessage = () => {\n      if (this.state.pastPrescriptions == '') {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }\n        }, \"You don't have any past prescription\");\n      } else {\n        let num = this.state.pastPrescriptions.length;\n        return /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }\n        }, \"Here are \", num, \" past prescriptions you had \");\n      }\n    };\n\n    this.showButtonBasedOnSpecialist = () => {\n      console.log(this.state.specialist);\n\n      if (this.state.specialist == \"Medical Specialist\") {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-primary btn-lg \",\n          onClick: () => this.setPrescriptionRedirect(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }\n        }, \"Search Prescription\");\n      } else {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-primary btn-lg \",\n          onClick: () => this.setPrescriptionRedirect(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }\n        }, \"Add New Prescription\");\n      }\n    };\n\n    this.createUser = () => {\n      var sampleUser = new User(this.state.id, this.state.name, this.state.email, this.state.password, this.state.birthday, this.state.specialist, this.state.profilePicUrl);\n      return sampleUser;\n    };\n\n    this.state = {\n      id: '',\n      name: '',\n      email: '',\n      password: '',\n      birthday: '',\n      medications: [\"MEDICATIONS1\", \"MEDICATIONS2\", \"MEDICATIONS3\"],\n      specialist: 'Special',\n      profilePicUrl: 'https://quindry.com/wp-content/gallery/people/Philadelphia-business-headshot-36-Square.jpg',\n      addPrescription: false,\n      allDrugs: drugs,\n      pastPrescriptions: [],\n      currentPrescriptions: []\n    };\n  }\n\n  componentWillMount() {\n    let id = +this.props.match.params.id;\n\n    if (id) {\n      this.repo.getUserById(id).then(curuser => {\n        let rawBday = curuser.user[0].dob;\n\n        if (rawBday == null) {\n          rawBday = \"0000-00-00\";\n        }\n\n        let userType = curuser.user[0].specialist;\n        var job = \"Normal User\";\n\n        if (userType == 1) {\n          job = \"Medical Specialist\";\n        }\n\n        let bday = rawBday.slice(0, 10);\n        this.setState({\n          id: curuser.user[0].id,\n          name: curuser.user[0].name,\n          email: curuser.user[0].email,\n          birthday: bday,\n          specialist: job,\n          password: curuser.user[0].password\n        });\n      });\n    }\n\n    this.repo.getPrescription(id).then(x => {\n      console.log(JSON.stringify(x.data));\n      let len = x.data.length;\n      let cPrescriptions = [];\n      let pPrescriptions = [];\n\n      for (let i = 0; i < len; i++) {\n        let tempPrice = 200;\n        let pharmacy = \"CVS\";\n        console.log(JSON.stringify(x.data[i]));\n\n        if (x.data[i].oldPrescription == 0) {\n          let curPrescription = new Drug(x.data[i].prescriptionID, x.data[i].name, tempPrice, x.data[i].DrugDescription, x.data[i].SideEffectDescription, pharmacy);\n          cPrescriptions.push(curPrescription);\n        } else if (x.data[i].oldPrescription == 1) {\n          let curPrescription = new Drug(x.data[i].prescriptionID, x.data[i].name, tempPrice, x.data[i].DrugDescription, x.data[i].SideEffectDescription, pharmacy);\n          pPrescriptions.push(curPrescription);\n        }\n      }\n\n      this.setState({\n        pastPrescriptions: pPrescriptions\n      });\n      this.setState({\n        currentPrescriptions: cPrescriptions\n      });\n      console.log(JSON.stringify(cPrescriptions[0]));\n      console.log(\"current Prescription length: \" + this.state.pastPrescriptions.length);\n    }).catch(x => {\n      alert(x);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavBar, {\n      id: this.props.match.params.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"DrugCard\",\n      style: {\n        fontFamily: \"sans-serif\",\n        textAlign: \"center\",\n        background: \"whitesmoke\",\n        marginBottom: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ProfileCard, {\n      user: this.createUser(),\n      cardColor: \"#9EC0FE\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }, this.renderPrescriptionRedirect(), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }\n    }, \"Past Prescription\"), this.ifShowMessage(), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group list-group-horizontal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    }, this.state.pastPrescriptions.map((item, i) => /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-group-item list-group-item-light\",\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 75\n      }\n    }, item)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }\n    }, \"Current Prescription\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-lg \",\n      onClick: () => this.setPrescriptionRedirect(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }, \"Add New Prescription\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      style: {\n        columns: \"1\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }\n    }, this.renderUserPrescriptions())));\n  }\n\n}","map":{"version":3,"sources":["/Users/ericmiao/Desktop/Programming/NOverdose/frontend/src/Components/mainPage.jsx"],"names":["React","ProfileCard","DrugCard","NavBar","drugs","NoverdoseRepo","Redirect","User","Drug","MainPage","Component","constructor","props","repo","delete","name","console","log","list","state","pastPrescriptions","concat","setState","newDrugList","currentPrescriptions","filter","obj","renderUserPrescriptions","map","x","y","margin","setPrescriptionRedirect","addPrescription","renderPrescriptionRedirect","newPath","id","pathname","ifShowMessage","num","length","showButtonBasedOnSpecialist","specialist","createUser","sampleUser","email","password","birthday","profilePicUrl","medications","allDrugs","componentWillMount","match","params","getUserById","then","curuser","rawBday","user","dob","userType","job","bday","slice","getPrescription","JSON","stringify","data","len","cPrescriptions","pPrescriptions","i","tempPrice","pharmacy","oldPrescription","curPrescription","prescriptionID","DrugDescription","SideEffectDescription","push","catch","alert","render","fontFamily","textAlign","background","marginBottom","item","columns"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ProfileCard from \"./profileCard\";\nimport DrugCard from \"./drugCard\";\nimport NavBar from './navBar';\nimport drugs from './TempData/drug';\nimport { NoverdoseRepo } from '../Api/NoverdoseRepo';\nimport { Redirect} from 'react-router-dom';\nimport User from '../models/user';\nimport Drug from '../models/drug';\nexport default class MainPage extends React.Component {\n    repo = new NoverdoseRepo();\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: '',\n            name: '',\n            email: '',\n            password: '',\n            birthday: '',\n            medications: [ \"MEDICATIONS1\", \"MEDICATIONS2\", \"MEDICATIONS3\"],\n            specialist: 'Special',\n            profilePicUrl: 'https://quindry.com/wp-content/gallery/people/Philadelphia-business-headshot-36-Square.jpg',\n            addPrescription: false,\n            allDrugs: drugs,\n            pastPrescriptions: [],\n            currentPrescriptions: []\n        };\n    }\n\n\n    componentWillMount() {\n        let id = +this.props.match.params.id;\n        if (id) {\n            this.repo.getUserById(id)\n                .then(curuser => {\n                        let rawBday = curuser.user[0].dob;\n                        if (rawBday == null){\n                            rawBday = \"0000-00-00\";\n                        }\n\n                        let userType = curuser.user[0].specialist;\n                        var job = \"Normal User\";\n                        if(userType == 1){\n                            job = \"Medical Specialist\"\n                        }\n                        let bday = rawBday.slice(0,10);\n                        this.setState({\n                            id: curuser.user[0].id,\n                            name: curuser.user[0].name,\n                            email: curuser.user[0].email,\n                            birthday: bday,\n                            specialist:job,\n                            password: curuser.user[0].password,\n                        })\n                    }\n                );\n        }\n\n        this.repo.getPrescription(id)\n            .then(x => {\n                console.log(JSON.stringify(x.data));\n                let len = x.data.length;\n                let cPrescriptions = [];\n                let pPrescriptions = [];\n                for(let i = 0; i < len; i++)\n                {\n                    let tempPrice = 200;\n                    let pharmacy = \"CVS\";\n                    console.log(JSON.stringify(x.data[i]));\n                    if(x.data[i].oldPrescription == 0)\n                    {\n                        let curPrescription = new Drug(\n                            x.data[i].prescriptionID,\n                            x.data[i].name,\n                            tempPrice,\n                            x.data[i].DrugDescription,\n                            x.data[i].SideEffectDescription,\n                            pharmacy)\n                        cPrescriptions.push(curPrescription);\n                    }else if(x.data[i].oldPrescription == 1){\n                        let curPrescription = new Drug(\n                            x.data[i].prescriptionID,\n                            x.data[i].name,\n                            tempPrice,\n                            x.data[i].DrugDescription,\n                            x.data[i].SideEffectDescription,\n                            pharmacy)\n                        pPrescriptions.push(curPrescription);\n                    }\n                }\n                this.setState({pastPrescriptions: pPrescriptions});\n                this.setState({currentPrescriptions: cPrescriptions});\n                console.log(JSON.stringify(cPrescriptions[0]));\n                console.log(\"current Prescription length: \" + this.state.pastPrescriptions.length)\n            }).catch(x=>{\n            alert(x);\n        })\n    }\n\n\n    delete=(name)=> {\n        console.log(\"deleting[\"+name+\"]\");\n        let list = this.state.pastPrescriptions.concat(name);\n        this.setState({pastPrescriptions: list})\n        let newDrugList = this.state.currentPrescriptions.filter(function( obj ) {\n            return obj.name !== name;\n        });\n        this.setState({currentPrescriptions:newDrugList});\n    }\n\n    renderUserPrescriptions=()=>{\n        return(\n            this.state.currentPrescriptions.map((x, y) =>\n                <div className=\"row\">\n                    <DrugCard key={y} {...x} />\n                    <button className=\"btn btn-secondary btn-lg disabled \"\n                            style={{ margin: \"auto\" }}\n                            onClick={()=>this.delete(x.name)}>\n                        Delete Prescription\n                    </button>\n\n                </div>\n            )\n        );\n    }\n\n\n    setPrescriptionRedirect = () => {\n        this.setState({\n            addPrescription: true\n        })\n    }\n\n\n    renderPrescriptionRedirect = () => {\n        let newPath = '/search/' + this.state.id;\n        if (this.state.addPrescription) {\n            return <Redirect\n                to={{\n                    pathname: newPath,\n                    state: {\n                        id: this.state.id\n                    }\n                }}\n            />\n        }\n    }\n\n    ifShowMessage = () =>{\n        if (this.state.pastPrescriptions == ''){\n            return (<p>You don't have any past prescription</p>)\n        }else{\n            let num = this.state.pastPrescriptions.length\n            return (<p>Here are {num} past prescriptions you had </p>)\n        }\n    }\n\n\n    showButtonBasedOnSpecialist=()=>{\n        console.log(this.state.specialist);\n        if (this.state.specialist == \"Medical Specialist\"){\n            return (<button className=\"btn btn-primary btn-lg \" onClick={() => this.setPrescriptionRedirect()}>Search Prescription</button>\n            )\n        }else{\n            return (<button className=\"btn btn-primary btn-lg \" onClick={() => this.setPrescriptionRedirect()}>Add New Prescription</button>\n            )\n        }\n    }\n\n    createUser = () => {\n        var sampleUser = new User\n        (\n            this.state.id,\n            this.state.name,\n            this.state.email,\n            this.state.password,\n            this.state.birthday,\n            this.state.specialist,\n            this.state.profilePicUrl\n        );\n        return sampleUser\n    }\n\n    render() {\n\n\n        return (\n            <>\n                <NavBar id={this.props.match.params.id}/>\n                <div className=\"DrugCard\" style={{\n                    fontFamily: \"sans-serif\",\n                    textAlign: \"center\",\n                    background: \"whitesmoke\",\n                    marginBottom: \"20px\"\n                }}>\n                    <ProfileCard user={this.createUser()}\n                                 cardColor={\"#9EC0FE\"} />\n                </div>\n                <div className={\"container\"}>\n                    <div className=\"text-center\">\n                        {this.renderPrescriptionRedirect()}\n                        <h1 className={\"display-6\"}>Past Prescription</h1>\n                        {this.ifShowMessage()}\n                        <ul className=\"list-group list-group-horizontal\">\n                            {this.state.pastPrescriptions.map((item,i) => <li className=\"list-group-item list-group-item-light\" key={i}>{item}</li>)}\n                        </ul>\n                    </div>\n\n                    <div className={\"container text-center\"}>\n                        <h1 className={\"display-6\"}>Current Prescription</h1>\n                        <br></br>\n                        <button className=\"btn btn-primary btn-lg \" onClick={() => this.setPrescriptionRedirect()}>Add New Prescription</button>\n        \n                    </div>\n                    <div className=\"col\"\n                         style={{ columns: \"1\" }}>\n                        {this.renderUserPrescriptions()}\n                    </div>\n                </div>\n\n            </>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}