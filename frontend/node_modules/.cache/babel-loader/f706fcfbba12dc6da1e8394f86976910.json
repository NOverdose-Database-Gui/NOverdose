{"ast":null,"code":"var _jsxFileName = \"/Users/ericmiao/Desktop/NOverdose/frontend/src/Components/mainPage.jsx\";\nimport React, { Component } from 'react';\nimport ProfileCard from \"./profileCard\";\nimport DrugCard from \"./drugCard\";\nimport NavBar from './navBar';\nimport user from './TempData/user';\nimport drugs from './TempData/drug';\nimport { NoverdoseRepo } from '../Api/NoverdoseRepo';\nimport User from '../models/user';\nexport default class MainPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.repo = new NoverdoseRepo();\n    this.state = {\n      id: '',\n      name: '',\n      email: '',\n      password: '',\n      birthday: '',\n      medications: '',\n      profilePicUrl: '',\n      user: ''\n    };\n  }\n\n  getUser(id) {\n    console.log(\"GETTING USER\");\n    let t = this.repo.getUserById(id);\n    console.log(t);\n    console.log(JSON.stringify(t));\n  }\n\n  componentDidMount() {\n    let id = +this.props.match.params.id;\n\n    if (id) {\n      this.repo.getUserById(id).then(curuser => {\n        this.setState({\n          id: curuser.user[0].id,\n          name: curuser.user[0].name,\n          email: curuser.user[0].email\n        });\n      });\n    }\n  }\n\n  render() {\n    var sampleUser = new User(this.state.id, this.state.name, this.state.email, this.state.password, this.state.birthday, this.state.medications, this.state.profilePicUrl); // console.log(JSON.stringify(sampleUser));\n\n    var allDrugs = drugs;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"DrugCard\",\n      style: {\n        fontFamily: \"sans-serif\",\n        textAlign: \"center\",\n        background: \"whitesmoke\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, this.state.name, \"'s Prescription\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"allCards\",\n      style: {\n        \"columns\": \"2\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, allDrugs.map((x, y) => /*#__PURE__*/React.createElement(DrugCard, Object.assign({\n      key: y\n    }, x, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 45\n      }\n    }))))), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, \"Hello\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-lg btn-primary\",\n      onClick: () => this.getUser(this.state.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, \"CLICK ME\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/ericmiao/Desktop/NOverdose/frontend/src/Components/mainPage.jsx"],"names":["React","Component","ProfileCard","DrugCard","NavBar","user","drugs","NoverdoseRepo","User","MainPage","constructor","props","repo","state","id","name","email","password","birthday","medications","profilePicUrl","getUser","console","log","t","getUserById","JSON","stringify","componentDidMount","match","params","then","curuser","setState","render","sampleUser","allDrugs","fontFamily","textAlign","background","map","x","y"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ProfileCard from \"./profileCard\";\nimport DrugCard from \"./drugCard\";\nimport NavBar from './navBar';\nimport user from './TempData/user';\nimport drugs from './TempData/drug';\nimport {NoverdoseRepo} from '../Api/NoverdoseRepo';\nimport User from '../models/user';\n\nexport default class MainPage extends React.Component {\n\n    repo = new NoverdoseRepo();\n    constructor(props) {\n    super(props)\n    \n    this.state = {\n        id: '',\n        name: '',\n        email: '',\n        password: '',\n        birthday: '',\n        medications: '',\n        profilePicUrl: '',\n        user:''\n    };\n    }\n    \n\n    getUser(id) {\n        console.log(\"GETTING USER\")\n        let t = this.repo.getUserById(id);\n        console.log(t);\n        console.log(JSON.stringify(t))\n    }\n\n    componentDidMount() {\n        let id = +this.props.match.params.id;\n        if (id) {\n                this.repo.getUserById(id)\n                    .then(curuser => {\n                        this.setState({\n                            id: curuser.user[0].id,\n                            name: curuser.user[0].name,\n                            email: curuser.user[0].email,\n                        })\n                    }\n                    );\n        }\n      }\n    \n    render() {\n        var sampleUser = new User(this.state.id, this.state.name, this.state.email, this.state.password, this.state.birthday, this.state.medications, this.state.profilePicUrl);\n        // console.log(JSON.stringify(sampleUser));\n        var allDrugs = drugs;\n        return (\n            <>\n                <NavBar />\n            <br></br>\n                <div className=\"DrugCard\" style={{\n                    fontFamily: \"sans-serif\",\n                    textAlign: \"center\",\n                    background: \"whitesmoke\"\n                }}>\n                    {/* <ProfileCard user={sampleUser}\n                        cardColor={\"#9EC0FE\"} /> */}\n                <h1 style={{ textAlign: \"center\" }}>{this.state.name}'s Prescription</h1>\n                    <div className=\"allCards\"\n                        style={{ \"columns\": \"2\" }}>\n                    {allDrugs.map((x, y) => <DrugCard key={y}  {...x} />)}\n                </div>\n                </div>\n                <h1>Hello</h1>\n                <button className=\"btn btn-lg btn-primary\" onClick={() => this.getUser(this.state.id)}>CLICK ME</button>\n            </>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}