{"ast":null,"code":"import axios from 'axios';\nimport { createHash } from 'crypto';\nexport class NoverdoseRepo {\n  constructor() {\n    this.url = 'http://localhost:8000';\n    this.config = {};\n  }\n\n  login(email, password) {\n    return new Promise((resolve, reject) => {\n      axios.get(`${this.url}/login`, {\n        params: {\n          email: email,\n          password: password\n        }\n      }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n    });\n  }\n\n  addUser(name, email, password) {\n    return new Promise((resolve, reject) => {\n      axios.post(`${this.url}/addUser`, {\n        name: name,\n        email: email,\n        password: password\n      }, this.config).then(x => {\n        resolve(x.data);\n      }).catch(x => {\n        alert(x);\n        reject(x);\n      });\n    });\n  }\n\n  getPrescription(userID) {\n    return new Promise((resolve, reject) => {\n      axios.get(`${this.url}/usersprescriptions`, {\n        params: {\n          userId: userID\n        }\n      }, this.config).then(x => resolve(x.data)).catch(x => {\n        alert(x);\n        reject(x);\n      });\n    });\n  }\n\n  getUserById(id) {\n    return new Promise((resolve, reject) => {\n      axios.get(`${this.url}/users/${id}`, this.config).then(x => resolve(x.data)).catch(x => {\n        alert(x);\n        reject(x);\n      });\n    });\n  }\n\n  updateUserByID(id, name, email, password, specialist, dob) {\n    console.log(id);\n    new Promise((resolve, reject) => {\n      axios.put(`${this.url}/updateUser`, {\n        id: id,\n        name: name,\n        email: email,\n        password: password,\n        specialist: specialist,\n        dob: dob\n      }, this.config).then(response => {\n        console.log(response);\n      }).catch(error => {\n        alert(error);\n      });\n    });\n  }\n\n  addPrescription(drugId, userId) {\n    var checkIfInDb = 0;\n    var returnValue = 0;\n    console.log('here');\n    new Promise((resolve, reject) => {\n      axios.get(`${this.url}/searchPrescription`, {\n        params: {\n          drugId: drugId,\n          userId: userId\n        }\n      }, this.config).then(x => {\n        console.log(x.data.data);\n\n        if (x.data.data == \"1\") {\n          console.log('here');\n          checkIfInDb = 1;\n        } else {\n          return new Promise((resolve, reject) => {\n            axios.post(`${this.url}/addPrescription`, {\n              drugId: drugId,\n              userId: userId\n            }, this.config).then(x => {\n              console.log(\"prescriptionAdded\");\n              returnValue = 1;\n            }).catch(x => {\n              alert(x);\n              reject(x);\n            });\n          });\n        }\n      }).catch(x => {\n        alert(x);\n        reject(x);\n      });\n    });\n\n    if (checkIfInDb == 1) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  symptoms() {\n    return new Promise((resolve, reject) => {\n      axios.get(`${this.url}/getSymptoms`, {}).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n    });\n  }\n\n  sideEffects() {\n    return new Promise((resolve, reject) => {\n      axios.get(`${this.url}/getSideEffects`, {}).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n    });\n  }\n\n  diseases() {\n    return new Promise((resolve, reject) => {\n      axios.get(`${this.url}/getDiseases`, {}).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n    });\n  }\n\n  search(name, disease, symptom, min, max, sideEffect) {\n    var where = \"\";\n\n    if (sideEffect == 4000 || sideEffect == undefined) {\n      if (name == '\"N/A\"' || name == '\"n/a\"' || name == undefined) {\n        if (disease == 6000 || disease == undefined) {\n          if (symptom == 5000 || symptom == undefined) {\n            if (min == 'N/A' || min == 'n/a' || min == undefined) {\n              if (max == 'N/A' || max == 'n/a' || max == undefined) {\n                where = \"\";\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              } else {\n                where = \"WHERE d.price <= \" + max;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              }\n            } else if (max == 'N/A' || max == 'n/a' || max == undefined) {\n              where = \"WHERE d.price >= \" + min;\n              return new Promise((resolve, reject) => {\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            } else {\n              return new Promise((resolve, reject) => {\n                where = \"WHERE d.price Between \" + min + \" AND \" + max;\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            }\n          } else {\n            if (min == 'N/A' || min == 'n/a' || min == undefined) {\n              if (max == 'N/A' || max == 'n/a' || max == undefined) {\n                where = \"WHERE s.symptomId =\" + symptom;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              } else {\n                where = \"WHERE d.price <= \" + max + \" AND s.symptomId =\" + symptom;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              }\n            } else if (max == 'N/A' || max == 'n/a' || max == undefined) {\n              where = \"WHERE d.price >= \" + max + \" AND s.symptomId =\" + symptom;\n              return new Promise((resolve, reject) => {\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            } else {\n              where = \"WHERE d.price BETWEEN \" + max + \" AND \" + min + \" AND s.symptomId =\" + symptom;\n              return new Promise((resolve, reject) => {\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            }\n          }\n        } else {\n          if (symptom == 5000 || symptom == undefined) {\n            if (min == 'N/A' || min == 'n/a' || min == undefined) {\n              if (max == 'N/A' || max == 'n/a' || max == undefined) {\n                where = \"WHERE dis.diseaseId = \" + disease;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              } else {\n                where = \"WHERE d.price <= \" + max + \" AND dis.diseaseId = \" + disease;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              }\n            } else if (max == 'N/A' || max == 'n/a' || max == undefined) {\n              where = \"WHERE d.price >= \" + min + \" AND dis.diseaseId = \" + disease;\n              return new Promise((resolve, reject) => {\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            } else {\n              return new Promise((resolve, reject) => {\n                where = \"WHERE d.price Between \" + min + \" AND \" + max + \" AND dis.diseaseId = \" + disease;\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            }\n          } else {\n            if (min == 'N/A' || min == 'n/a' || min == undefined) {\n              if (max == 'N/A' || max == 'n/a' || max == undefined) {\n                where = \"WHERE s.symptomId =\" + symptom + \" AND disdiseaseId = \" + disease;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              } else {\n                where = \"WHERE d.price <= \" + max + \" AND s.symptomId =\" + symptom + \" AND disdiseaseId = \" + disease;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              }\n            } else if (max == 'N/A' || max == 'n/a' || max == undefined) {\n              where = \"WHERE d.price >= \" + max + \" AND s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease;\n              return new Promise((resolve, reject) => {\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            } else {\n              where = \"WHERE d.price BETWEEN \" + max + \" AND \" + min + \" AND s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease;\n              return new Promise((resolve, reject) => {\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            }\n          }\n        }\n      } else {\n        if (disease == 6000 || disease == undefined) {\n          if (symptom == 5000 || symptom == undefined) {\n            if (min == 'N/A' || min == 'n/a' || min == undefined) {\n              if (max == 'N/A' || max == 'n/a' || max == undefined) {\n                console.log('here');\n                where = \"WHERE d.name = \" + name;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              } else {\n                where = \"WHERE d.price <= \" + max + \" AND d.name = \" + name;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              }\n            } else if (max == 'N/A' || max == 'n/a' || max == undefined) {\n              where = \"WHERE d.price >= \" + min + \" AND d.name = \" + name;\n              return new Promise((resolve, reject) => {\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            } else {\n              return new Promise((resolve, reject) => {\n                where = \"WHERE d.price Between \" + min + \" AND \" + max + \" AND d.name = \" + name;\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            }\n          } else {\n            if (min == 'N/A' || min == 'n/a' || min == undefined) {\n              if (max == 'N/A' || max == 'n/a' || max == undefined) {\n                where = \"WHERE s.symptomId =\" + symptom + \" AND d.name = \" + name;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              } else {\n                where = \"WHERE d.price <= \" + max + \" AND s.symptomId =\" + symptom + \" AND d.name = \" + name;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              }\n            } else if (max == 'N/A' || max == 'n/a' || max == undefined) {\n              where = \"WHERE d.price >= \" + max + \" AND s.symptomId =\" + symptom + \" AND d.name = \" + name;\n              return new Promise((resolve, reject) => {\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            } else {\n              where = \"WHERE d.price BETWEEN \" + max + \" AND \" + min + \" AND s.symptomId =\" + symptom + \" AND d.name = \" + name;\n              return new Promise((resolve, reject) => {\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            }\n          }\n        } else {\n          if (symptom == 5000 || symptom == undefined) {\n            if (min == 'N/A' || min == 'n/a' || min == undefined) {\n              if (max == 'N/A' || max == 'n/a' || max == undefined) {\n                where = \"WHERE dis.diseaseId = \" + disease + \" AND d.name = \" + name;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              } else {\n                where = \"WHERE d.price <= \" + max + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              }\n            } else if (max == 'N/A' || max == 'n/a' || max == undefined) {\n              where = \"WHERE d.price >= \" + min + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name;\n              return new Promise((resolve, reject) => {\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            } else {\n              return new Promise((resolve, reject) => {\n                where = \"WHERE d.price Between \" + min + \" AND \" + max + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name;\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            }\n          } else {\n            if (min == 'N/A' || min == 'n/a' || min == undefined) {\n              if (max == 'N/A' || max == 'n/a' || max == undefined) {\n                where = \"WHERE s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              } else {\n                where = \"WHERE d.price <= \" + max + \" AND s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              }\n            } else if (max == 'N/A' || max == 'n/a' || max == undefined) {\n              where = \"WHERE d.price >= \" + max + \" AND s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name;\n              return new Promise((resolve, reject) => {\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            } else {\n              where = \"WHERE d.price BETWEEN \" + max + \" AND \" + min + \" AND s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name;\n              return new Promise((resolve, reject) => {\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    mwhere: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            }\n          }\n        }\n      }\n    } else {\n      if (name == '\"N/A\"' || name == '\"n/a\"' || name == undefined) {\n        if (disease == 6000 || disease == undefined) {\n          if (symptom == 5000 || symptom == undefined) {\n            if (min == 'N/A' || min == 'n/a' || min == undefined) {\n              if (max == 'N/A' || max == 'n/a' || max == undefined) {\n                where = \"WHERE se.sideEffectId = \" + sideEffect;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              } else {\n                where = \"WHERE d.price <= \" + max + \" AND se.sideEffectId = \" + sideEffect;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              }\n            } else if (max == 'N/A' || max == 'n/a' || max == undefined) {\n              where = \"WHERE d.price >= \" + min + \" AND se.sideEffectId = \" + sideEffect;\n              return new Promise((resolve, reject) => {\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            } else {\n              return new Promise((resolve, reject) => {\n                where = \"WHERE d.price Between \" + min + \" AND \" + max + \" AND se.sideEffectId = \" + sideEffect;\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            }\n          } else {\n            if (min == 'N/A' || min == 'n/a' || min == undefined) {\n              if (max == 'N/A' || max == 'n/a' || max == undefined) {\n                where = \"WHERE s.symptomId =\" + symptom + \" AND se.sideEffectId = \" + sideEffect;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              } else {\n                where = \"WHERE d.price <= \" + max + \" AND s.symptomId =\" + symptom + \" AND se.sideEffectId = \" + sideEffect;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              }\n            } else if (max == 'N/A' || max == 'n/a' || max == undefined) {\n              where = \"WHERE d.price >= \" + max + \" AND s.symptomId =\" + symptom + \" AND se.sideEffectId = \" + sideEffect;\n              return new Promise((resolve, reject) => {\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            } else {\n              where = \"WHERE d.price BETWEEN \" + max + \" AND \" + min + \" AND s.symptomId =\" + symptom + \" AND se.sideEffectId = \" + sideEffect;\n              return new Promise((resolve, reject) => {\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            }\n          }\n        } else {\n          if (symptom == 5000 || symptom == undefined) {\n            if (min == 'N/A' || min == 'n/a' || min == undefined) {\n              if (max == 'N/A' || max == 'n/a' || max == undefined) {\n                where = \"WHERE dis.diseaseId = \" + disease + \" AND se.sideEffectId = \" + sideEffect;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              } else {\n                where = \"WHERE d.price <= \" + max + \" AND dis.diseaseId = \" + disease + \" AND se.sideEffectId = \" + sideEffect;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              }\n            } else if (max == 'N/A' || max == 'n/a' || max == undefined) {\n              where = \"WHERE d.price >= \" + min + \" AND dis.diseaseId = \" + disease + \" AND se.sideEffectId = \" + sideEffect;\n              return new Promise((resolve, reject) => {\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            } else {\n              return new Promise((resolve, reject) => {\n                where = \"WHERE d.price Between \" + min + \" AND \" + max + \" AND dis.diseaseId = \" + disease + \" AND se.sideEffectId = \" + sideEffect;\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            }\n          } else {\n            if (min == 'N/A' || min == 'n/a' || min == undefined) {\n              if (max == 'N/A' || max == 'n/a' || max == undefined) {\n                where = \"WHERE s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease + \" AND se.sideEffectId = \" + sideEffect;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              } else {\n                where = \"WHERE d.price <= \" + max + \" AND s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease + \" AND se.sideEffectId = \" + sideEffect;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              }\n            } else if (max == 'N/A' || max == 'n/a' || max == undefined) {\n              where = \"WHERE d.price >= \" + max + \" AND s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease + \" AND se.sideEffectId = \" + sideEffect;\n              return new Promise((resolve, reject) => {\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            } else {\n              where = \"WHERE d.price BETWEEN \" + max + \" AND \" + min + \" AND s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease + \" AND se.sideEffectId = \" + sideEffect;\n              return new Promise((resolve, reject) => {\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            }\n          }\n        }\n      } else {\n        if (disease == 6000 || disease == undefined) {\n          if (symptom == 5000 || symptom == undefined) {\n            if (min == 'N/A' || min == 'n/a' || min == undefined) {\n              if (max == 'N/A' || max == 'n/a' || max == undefined) {\n                where = \"WHERE d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              } else {\n                where = \"WHERE d.price <= \" + max + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              }\n            } else if (max == 'N/A' || max == 'n/a' || max == undefined) {\n              where = \"WHERE d.price >= \" + min + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n              return new Promise((resolve, reject) => {\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            } else {\n              return new Promise((resolve, reject) => {\n                where = \"WHERE d.price Between \" + min + \" AND \" + max + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            }\n          } else {\n            if (min == 'N/A' || min == 'n/a' || min == undefined) {\n              if (max == 'N/A' || max == 'n/a' || max == undefined) {\n                where = \"WHERE s.symptomId =\" + symptom + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              } else {\n                where = \"WHERE d.price <= \" + max + \" AND s.symptomId =\" + symptom + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              }\n            } else if (max == 'N/A' || max == 'n/a' || max == undefined) {\n              where = \"WHERE d.price >= \" + max + \" AND s.symptomId =\" + symptom + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n              return new Promise((resolve, reject) => {\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            } else {\n              where = \"WHERE d.price BETWEEN \" + max + \" AND \" + min + \" AND s.symptomId =\" + symptom + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n              return new Promise((resolve, reject) => {\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            }\n          }\n        } else {\n          if (symptom == 5000 || symptom == undefined) {\n            if (min == 'N/A' || min == 'n/a' || min == undefined) {\n              if (max == 'N/A' || max == 'n/a' || max == undefined) {\n                where = \"WHERE dis.diseaseId = \" + disease + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              } else {\n                where = \"WHERE d.price <= \" + max + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              }\n            } else if (max == 'N/A' || max == 'n/a' || max == undefined) {\n              where = \"WHERE d.price >= \" + min + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n              return new Promise((resolve, reject) => {\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            } else {\n              return new Promise((resolve, reject) => {\n                where = \"WHERE d.price  \" + min + \" AND \" + max + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            }\n          } else {\n            if (min == 'N/A' || min == 'n/a' || min == undefined) {\n              if (max == 'N/A' || max == 'n/a' || max == undefined) {\n                where = \"WHERE s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              } else {\n                where = \"WHERE d.price <= \" + max + \" AND s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n                return new Promise((resolve, reject) => {\n                  axios.get(`${this.url}/getDrugs`, {\n                    params: {\n                      where: where\n                    }\n                  }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n                });\n              }\n            } else if (max == 'N/A' || max == 'n/a' || max == undefined) {\n              where = \"WHERE d.price >= \" + max + \" AND s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n              return new Promise((resolve, reject) => {\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            } else {\n              where = \"WHERE d.price BETWEEN \" + max + \" AND \" + min + \" AND s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n              return new Promise((resolve, reject) => {\n                axios.get(`${this.url}/getDrugs`, {\n                  params: {\n                    where: where\n                  }\n                }).then(resp => resolve(resp.data)).catch(resp => alert(resp));\n              });\n            }\n          }\n        }\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/ericmiao/Desktop/Programming/NOverdose/frontend/src/Api/NoverdoseRepo.js"],"names":["axios","createHash","NoverdoseRepo","url","config","login","email","password","Promise","resolve","reject","get","params","then","resp","data","catch","alert","addUser","name","post","x","getPrescription","userID","userId","getUserById","id","updateUserByID","specialist","dob","console","log","put","response","error","addPrescription","drugId","checkIfInDb","returnValue","symptoms","sideEffects","diseases","search","disease","symptom","min","max","sideEffect","where","undefined","mwhere"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { createHash } from 'crypto';\n\nexport class NoverdoseRepo {\n\n    url = 'http://localhost:8000'\n\n    config = {\n    };\n\n    login(email, password) {\n        return new Promise((resolve, reject) => {\n            axios.get(`${this.url}/login`, { params: {email: email, password: password}})\n            .then(resp => resolve(resp.data))\n            .catch(resp => alert(resp));\n        });\n    }\n\n    addUser(name, email, password) {\n        return new Promise((resolve, reject) => {\n            axios.post(`${this.url}/addUser`, {name: name, email: email, password: password}, this.config)\n                .then(x => {\n                    resolve(x.data);\n                })\n                .catch(x => {\n                    alert(x);\n                    reject(x);\n                });\n        });\n    }\n\n    getPrescription(userID){\n        return new Promise((resolve, reject) => {\n            axios.get(`${this.url}/usersprescriptions`, {params: {userId: userID}}, this.config)\n                .then(x => resolve(x.data))\n                .catch(x => {\n                    alert(x);\n                    reject(x);\n                });\n        });\n    }\n    \n    getUserById(id) {\n        return new Promise((resolve, reject) => {\n            axios.get(`${this.url}/users/${id}`, this.config)\n                .then(x => resolve(x.data))\n                .catch(x => {\n                    alert(x);\n                    reject(x);\n                });\n        });\n    }\n    updateUserByID(id, name, email, password, specialist, dob) {\n        console.log(id);\n        new Promise((resolve, reject) => {\n            axios.put(`${this.url}/updateUser`,\n                {\n                            id: id,\n                            name: name,\n                            email:email,\n                            password:password,\n                            specialist: specialist,\n                            dob: dob\n                        }, this.config)\n                .then(response=>{\n                        console.log(response);\n                     }\n                )\n                .catch(error => {\n                   alert( error)\n                });\n        });\n    }\n\n    addPrescription(drugId,userId) {\n        var checkIfInDb = 0;\n        var returnValue = 0;\n        console.log('here');\n        new Promise((resolve, reject) => {\n            axios.get(`${this.url}/searchPrescription`, {params: {drugId: drugId, userId: userId}}, this.config)\n                .then(x => {\n                    console.log(x.data.data);\n                    if(x.data.data == \"1\")\n                    {\n                        console.log('here');\n                        checkIfInDb = 1;\n                    }\n                    else\n                    {\n                        return new Promise((resolve, reject) => {\n                            axios.post(`${this.url}/addPrescription`, {drugId: drugId, userId: userId}, this.config)\n                                .then(x => {\n                                    console.log(\"prescriptionAdded\");\n                                    returnValue = 1;\n                                })\n                                .catch(x => {\n                                    alert(x);\n                                    reject(x);\n                                });\n                        });\n                    }\n                })\n                .catch(x => {\n                    alert(x);\n                    reject(x);\n                });\n        });\n        if(checkIfInDb == 1)\n        {\n            return 0;\n        }\n        else\n        {\n            return 1;\n        }\n    }\n\n    symptoms()\n    {\n        return new Promise((resolve, reject) => {\n            axios.get(`${this.url}/getSymptoms`, {})\n            .then(resp => resolve(resp.data))\n            .catch(resp => alert(resp));\n        });\n    }\n    \n    sideEffects()\n    {\n        return new Promise((resolve, reject) => {\n            axios.get(`${this.url}/getSideEffects`, {})\n            .then(resp => resolve(resp.data))\n            .catch(resp => alert(resp));\n        });\n    }\n\n    diseases()\n    {\n        return new Promise((resolve, reject) => {\n            axios.get(`${this.url}/getDiseases`, {})\n            .then(resp => resolve(resp.data))\n            .catch(resp => alert(resp));\n        });\n    }\n    \n    search(name, disease, symptom, min, max, sideEffect) {\n        var where = \"\";\n        if(sideEffect == 4000 || sideEffect == undefined)\n        {\n            if(name == '\"N/A\"' || name == '\"n/a\"' || name == undefined)\n            {\n                if(disease == 6000 || disease == undefined)\n                {\n                    if(symptom == 5000 || symptom == undefined)\n                    {\n                        if(min == 'N/A' || min == 'n/a' || min == undefined)\n                        {\n                            if(max == 'N/A' || max == 'n/a' || max == undefined)\n                            {\n                                where = \"\";\n                                return new Promise((resolve, reject) => {\n                                    axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                    .then(resp => resolve(resp.data))\n                                    .catch(resp => alert(resp));\n                                });\n                            }\n                            else\n                            {\n                                where = \"WHERE d.price <= \" + max;\n                                return new Promise((resolve, reject) => {\n                                    axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                    .then(resp => resolve(resp.data))\n                                    .catch(resp => alert(resp));\n                                });\n                            }\n                        }\n                        else if(max == 'N/A' || max == 'n/a' || max == undefined)\n                        {\n                            where = \"WHERE d.price >= \" + min;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                        else{\n                            return new Promise((resolve, reject) => {\n                                where = \"WHERE d.price Between \" + min + \" AND \" + max;\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                    }\n                    else\n                    {\n                        if(min == 'N/A' || min == 'n/a' || min == undefined)\n                        {\n                            if(max == 'N/A' || max == 'n/a' || max == undefined)\n                            {\n                                where = \"WHERE s.symptomId =\" + symptom; \n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                            else\n                            {\n                                where = \"WHERE d.price <= \" + max + \" AND s.symptomId =\" + symptom; \n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                        }\n                        else if(max == 'N/A' || max == 'n/a' || max == undefined)\n                        {\n                            where = \"WHERE d.price >= \" + max + \" AND s.symptomId =\" + symptom;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                        else{\n                            where = \"WHERE d.price BETWEEN \" + max + \" AND \" + min + \" AND s.symptomId =\" + symptom;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                    }\n                }\n                else\n                {\n                    if(symptom == 5000 || symptom == undefined)\n                    {\n                        if(min == 'N/A' || min == 'n/a' || min == undefined)\n                        {\n                            if(max == 'N/A' || max == 'n/a' || max == undefined)\n                            {\n                                where = \"WHERE dis.diseaseId = \" + disease;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                            else\n                            {\n                                where = \"WHERE d.price <= \" + max + \" AND dis.diseaseId = \" + disease;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                        }\n                        else if(max == 'N/A' || max == 'n/a' || max == undefined)\n                        {\n                            where = \"WHERE d.price >= \" + min + \" AND dis.diseaseId = \" + disease;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                        else{\n                            return new Promise((resolve, reject) => {\n                                where = \"WHERE d.price Between \" + min + \" AND \" + max + \" AND dis.diseaseId = \" + disease;\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                    }\n                    else\n                    {\n                        if(min == 'N/A' || min == 'n/a' || min == undefined)\n                        {\n                            if(max == 'N/A' || max == 'n/a' || max == undefined)\n                            {\n                                where = \"WHERE s.symptomId =\" + symptom + \" AND disdiseaseId = \" + disease;\n                                return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                            else\n                            {\n                                where = \"WHERE d.price <= \" + max + \" AND s.symptomId =\" + symptom + \" AND disdiseaseId = \" + disease;\n                                return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                        }\n                        else if(max == 'N/A' || max == 'n/a' || max == undefined)\n                        {\n                            where = \"WHERE d.price >= \" + max + \" AND s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                        else{\n                            where = \"WHERE d.price BETWEEN \" + max + \" AND \" + min + \" AND s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                    }\n                }\n            }\n            else\n            {\n                if(disease == 6000 || disease == undefined)\n                {\n                    if(symptom == 5000 || symptom == undefined)\n                    {\n                        if(min == 'N/A' || min == 'n/a' || min == undefined)\n                        {\n                            if(max == 'N/A' || max == 'n/a' || max == undefined)\n                            {\n                                console.log('here');\n                                where = \"WHERE d.name = \" + name;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                            else\n                            {\n                                where = \"WHERE d.price <= \" + max + \" AND d.name = \" + name;\n                                return new Promise((resolve, reject) => {\n                                    axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                    .then(resp => resolve(resp.data))\n                                    .catch(resp => alert(resp));\n                                });\n                            }\n                        }\n                        else if(max == 'N/A' || max == 'n/a' || max == undefined)\n                        {\n                            where = \"WHERE d.price >= \" + min+ \" AND d.name = \" + name;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                        else{\n                            return new Promise((resolve, reject) => {\n                                where = \"WHERE d.price Between \" + min + \" AND \" + max + \" AND d.name = \" + name;\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                    }\n                    else\n                    {\n                        if(min == 'N/A' || min == 'n/a' || min == undefined)\n                        {\n                            if(max == 'N/A' || max == 'n/a' || max == undefined)\n                            {\n                                where = \"WHERE s.symptomId =\" + symptom + \" AND d.name = \" + name;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                            else\n                            {\n                                where = \"WHERE d.price <= \" + max + \" AND s.symptomId =\" + symptom + \" AND d.name = \" + name;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                        }\n                        else if(max == 'N/A' || max == 'n/a' || max == undefined)\n                        {\n                            where = \"WHERE d.price >= \" + max + \" AND s.symptomId =\" + symptom + \" AND d.name = \" + name;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                        else{\n                            where = \"WHERE d.price BETWEEN \" + max + \" AND \" + min + \" AND s.symptomId =\" + symptom + \" AND d.name = \" + name;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                    }\n                }\n                else\n                {\n                    if(symptom == 5000 || symptom == undefined)\n                    {\n                        if(min == 'N/A' || min == 'n/a' || min == undefined)\n                        {\n                            if(max == 'N/A' || max == 'n/a' || max == undefined)\n                            {\n                                where = \"WHERE dis.diseaseId = \" + disease + \" AND d.name = \" + name;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                            else\n                            {\n                                where = \"WHERE d.price <= \" + max + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                        }\n                        else if(max == 'N/A' || max == 'n/a' || max == undefined)\n                        {\n                            where = \"WHERE d.price >= \" + min + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                        else{\n                            return new Promise((resolve, reject) => {\n                                where = \"WHERE d.price Between \" + min + \" AND \" + max + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name;\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                    }\n                    else\n                    {\n                        if(min == 'N/A' || min == 'n/a' || min == undefined)\n                        {\n                            if(max == 'N/A' || max == 'n/a' || max == undefined)\n                            {\n                                where = \"WHERE s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name;\n                                return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                            else\n                            {\n                                where = \"WHERE d.price <= \" + max + \" AND s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name;\n                                return new Promise((resolve, reject) => {\n                                    axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                    .then(resp => resolve(resp.data))\n                                    .catch(resp => alert(resp));\n                                });\n                            }\n                        }\n                        else if(max == 'N/A' || max == 'n/a' || max == undefined)\n                        {\n                            where = \"WHERE d.price >= \" + max + \" AND s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                        else{\n                            where = \"WHERE d.price BETWEEN \" + max + \" AND \" + min + \" AND s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {mwhere: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        else\n        {\n            if(name == '\"N/A\"' || name == '\"n/a\"' || name == undefined)\n            {\n                if(disease == 6000 || disease == undefined)\n                {\n                    if(symptom == 5000 || symptom == undefined)\n                    {\n                        if(min == 'N/A' || min == 'n/a' || min == undefined)\n                        {\n                            if(max == 'N/A' || max == 'n/a' || max == undefined)\n                            {\n                                where = \"WHERE se.sideEffectId = \" + sideEffect; \n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                            else\n                            {\n                                where = \"WHERE d.price <= \" + max + \" AND se.sideEffectId = \" + sideEffect; \n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                        }\n                        else if(max == 'N/A' || max == 'n/a' || max == undefined)\n                        {\n                            where = \"WHERE d.price >= \" + min+ \" AND se.sideEffectId = \" + sideEffect;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                        else{\n                            return new Promise((resolve, reject) => {\n                                where = \"WHERE d.price Between \" + min + \" AND \" + max + \" AND se.sideEffectId = \" + sideEffect;\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                    }\n                    else\n                    {\n                        if(min == 'N/A' || min == 'n/a' || min == undefined)\n                        {\n                            if(max == 'N/A' || max == 'n/a' || max == undefined)\n                            {\n                                where = \"WHERE s.symptomId =\" + symptom + \" AND se.sideEffectId = \" + sideEffect; \n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                            else\n                            {\n                                where = \"WHERE d.price <= \" + max + \" AND s.symptomId =\" + symptom + \" AND se.sideEffectId = \" + sideEffect; \n                                return new Promise((resolve, reject) => {\n                                    axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                    .then(resp => resolve(resp.data))\n                                    .catch(resp => alert(resp));\n                                });\n                            }\n                        }\n                        else if(max == 'N/A' || max == 'n/a' || max == undefined)\n                        {\n                            where = \"WHERE d.price >= \" + max + \" AND s.symptomId =\" + symptom + \" AND se.sideEffectId = \" + sideEffect;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                        else{\n                            where = \"WHERE d.price BETWEEN \" + max + \" AND \" + min + \" AND s.symptomId =\" + symptom + \" AND se.sideEffectId = \" + sideEffect;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                    }\n                }\n                else\n                {\n                    if(symptom == 5000 || symptom == undefined)\n                    {\n                        if(min == 'N/A' || min == 'n/a' || min == undefined)\n                        {\n                            if(max == 'N/A' || max == 'n/a' || max == undefined)\n                            {\n                                where = \"WHERE dis.diseaseId = \" + disease + \" AND se.sideEffectId = \" + sideEffect;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                            else\n                            {\n                                where = \"WHERE d.price <= \" + max + \" AND dis.diseaseId = \" + disease + \" AND se.sideEffectId = \" + sideEffect;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                        }\n                        else if(max == 'N/A' || max == 'n/a' || max == undefined)\n                        {\n                            where = \"WHERE d.price >= \" + min + \" AND dis.diseaseId = \" + disease + \" AND se.sideEffectId = \" + sideEffect;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                        else{\n                            return new Promise((resolve, reject) => {\n                                where = \"WHERE d.price Between \" + min + \" AND \" + max + \" AND dis.diseaseId = \" + disease + \" AND se.sideEffectId = \" + sideEffect;\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                    }\n                    else\n                    {\n                        if(min == 'N/A' || min == 'n/a' || min == undefined)\n                        {\n                            if(max == 'N/A' || max == 'n/a' || max == undefined)\n                            {\n                                where = \"WHERE s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease + \" AND se.sideEffectId = \" + sideEffect;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                            else\n                            {\n                                where = \"WHERE d.price <= \" + max + \" AND s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease + \" AND se.sideEffectId = \" + sideEffect;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                        }\n                        else if(max == 'N/A' || max == 'n/a' || max == undefined)\n                        {\n                            where = \"WHERE d.price >= \" + max + \" AND s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease + \" AND se.sideEffectId = \" + sideEffect;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                        else{\n                            where = \"WHERE d.price BETWEEN \" + max + \" AND \" + min + \" AND s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease+ \" AND se.sideEffectId = \" + sideEffect;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                    }\n                }\n            }\n            else\n            {\n                if(disease == 6000 || disease == undefined)\n                {\n                    if(symptom == 5000 || symptom == undefined)\n                    {\n                        if(min == 'N/A' || min == 'n/a' || min == undefined)\n                        {\n                            if(max == 'N/A' || max == 'n/a' || max == undefined)\n                            {\n                                where = \"WHERE d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                            else\n                            {\n                                where = \"WHERE d.price <= \" + max + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                        }\n                        else if(max == 'N/A' || max == 'n/a' || max == undefined)\n                        {\n                            where = \"WHERE d.price >= \" + min+ \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                        else{\n                            return new Promise((resolve, reject) => {\n                                where = \"WHERE d.price Between \" + min + \" AND \" + max + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                    }\n                    else\n                    {\n                        if(min == 'N/A' || min == 'n/a' || min == undefined)\n                        {\n                            if(max == 'N/A' || max == 'n/a' || max == undefined)\n                            {\n                                where = \"WHERE s.symptomId =\" + symptom + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                            else\n                            {\n                                where = \"WHERE d.price <= \" + max + \" AND s.symptomId =\" + symptom + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n                                return new Promise((resolve, reject) => {\n                                    axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                    .then(resp => resolve(resp.data))\n                                    .catch(resp => alert(resp));\n                                });\n                            }\n                        }\n                        else if(max == 'N/A' || max == 'n/a' || max == undefined)\n                        {\n                            where = \"WHERE d.price >= \" + max + \" AND s.symptomId =\" + symptom + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                        else{\n                            where = \"WHERE d.price BETWEEN \" + max + \" AND \" + min + \" AND s.symptomId =\" + symptom + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                    }\n                }\n                else\n                {\n                    if(symptom == 5000|| symptom == undefined)\n                    {\n                        if(min == 'N/A' || min == 'n/a' || min == undefined)\n                        {\n                            if(max == 'N/A' || max == 'n/a' || max == undefined)\n                            {\n                                where = \"WHERE dis.diseaseId = \" + disease + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                            else\n                            {\n                                where = \"WHERE d.price <= \" + max + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                        }\n                        else if(max == 'N/A' || max == 'n/a' || max == undefined)\n                        {\n                            where = \"WHERE d.price >= \" + min + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                        else{\n                            return new Promise((resolve, reject) => {\n                                where = \"WHERE d.price  \" + min + \" AND \" + max + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect; \n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                    }\n                    else\n                    {\n                        if(min == 'N/A' || min == 'n/a' || min == undefined)\n                        {\n                            if(max == 'N/A' || max == 'n/a' || max == undefined)\n                            {\n                                where = \"WHERE s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                            else\n                            {\n                                where = \"WHERE d.price <= \" + max + \" AND s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                            }\n                        }\n                        else if(max == 'N/A' || max == 'n/a' || max == undefined)\n                        {\n                            where = \"WHERE d.price >= \" + max + \" AND s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect;\n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                        else{\n                            where = \"WHERE d.price BETWEEN \" + max + \" AND \" + min + \" AND s.symptomId =\" + symptom + \" AND dis.diseaseId = \" + disease + \" AND d.name = \" + name + \" AND se.sideEffectId = \" + sideEffect; \n                            return new Promise((resolve, reject) => {\n                                axios.get(`${this.url}/getDrugs`, {params: {where: where}})\n                                .then(resp => resolve(resp.data))\n                                .catch(resp => alert(resp));\n                            });\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}