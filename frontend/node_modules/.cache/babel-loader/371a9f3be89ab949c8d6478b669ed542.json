{"ast":null,"code":"import axios from 'axios';\nimport { createHash } from 'crypto';\nexport class NoverdoseRepo {\n  constructor() {\n    this.url = 'http://localhost:8000';\n    this.config = {};\n  }\n\n  login(email, password) {\n    console.log(\"login password\", password);\n    let obj = {\n      email: email,\n      password: password\n    };\n    console.log(\"obj: \", obj);\n    return new Promise((resolve, reject) => {\n      axios.get(`${this.url}/login`, {\n        params: {\n          email: email,\n          password: password\n        }\n      }).then(resp => resolve(resp.data)\n      /*handle receiving parent info*/\n      ).catch(resp => alert(resp));\n    });\n  }\n\n  addUser(user) {\n    console.log(user);\n    return new Promise((resolve, reject) => {\n      axios.post(`${this.url}/register`, user, this.config).then(x => resolve(x.data)).catch(x => {\n        alert(x);\n        reject(x);\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["/usr/src/app/src/Api/NoverdoseRepo.js"],"names":["axios","createHash","NoverdoseRepo","url","config","login","email","password","console","log","obj","Promise","resolve","reject","get","params","then","resp","data","catch","alert","addUser","user","post","x"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,QAA3B;AAEA,OAAO,MAAMC,aAAN,CAAoB;AAAA;AAAA,SAEvBC,GAFuB,GAEjB,uBAFiB;AAAA,SAIvBC,MAJuB,GAId,EAJc;AAAA;;AAOvBC,EAAAA,KAAK,CAACC,KAAD,EAAQC,QAAR,EAAkB;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,QAA9B;AACA,QAAIG,GAAG,GAAG;AACNJ,MAAAA,KAAK,EAAEA,KADD;AAENC,MAAAA,QAAQ,EAAEA;AAFJ,KAAV;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,GAArB;AAEA,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCb,MAAAA,KAAK,CAACc,GAAN,CAAW,GAAE,KAAKX,GAAI,QAAtB,EAA+B;AAAEY,QAAAA,MAAM,EAAE;AAACT,UAAAA,KAAK,EAAEA,KAAR;AAAeC,UAAAA,QAAQ,EAAEA;AAAzB;AAAV,OAA/B,EACCS,IADD,CACMC,IAAI,IAAIL,OAAO,CAACK,IAAI,CAACC,IAAN;AAAW;AADhC,QAECC,KAFD,CAEOF,IAAI,IAAIG,KAAK,CAACH,IAAD,CAFpB;AAGH,KAJM,CAAP;AAKH;;AAEDI,EAAAA,OAAO,CAACC,IAAD,EAAO;AACVd,IAAAA,OAAO,CAACC,GAAR,CAAYa,IAAZ;AACA,WAAO,IAAIX,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCb,MAAAA,KAAK,CAACuB,IAAN,CAAY,GAAE,KAAKpB,GAAI,WAAvB,EAAmCmB,IAAnC,EAAyC,KAAKlB,MAA9C,EACKY,IADL,CACUQ,CAAC,IAAIZ,OAAO,CAACY,CAAC,CAACN,IAAH,CADtB,EAEKC,KAFL,CAEWK,CAAC,IAAI;AACRJ,QAAAA,KAAK,CAACI,CAAD,CAAL;AACAX,QAAAA,MAAM,CAACW,CAAD,CAAN;AACH,OALL;AAMH,KAPM,CAAP;AAQH;;AAhCsB","sourcesContent":["import axios from 'axios';\nimport { createHash } from 'crypto';\n\nexport class NoverdoseRepo {\n\n    url = 'http://localhost:8000'\n\n    config = {\n    };\n\n    login(email, password) {\n        console.log(\"login password\", password);\n        let obj = {\n            email: email,\n            password: password\n        };\n        console.log(\"obj: \", obj);\n\n        return new Promise((resolve, reject) => {\n            axios.get(`${this.url}/login`, { params: {email: email, password: password}})\n            .then(resp => resolve(resp.data)/*handle receiving parent info*/)\n            .catch(resp => alert(resp));\n        });\n    }\n\n    addUser(user) {\n        console.log(user);\n        return new Promise((resolve, reject) => {\n            axios.post(`${this.url}/register`, user, this.config)\n                .then(x => resolve(x.data))\n                .catch(x => {\n                    alert(x);\n                    reject(x);\n                });\n        });\n    }\n    \n\n}\n"]},"metadata":{},"sourceType":"module"}