{"ast":null,"code":"var _jsxFileName = \"/Users/dylanweeks/Desktop/NOverdose/frontend/src/Components/mainPage.jsx\";\nimport React from 'react';\nimport ProfileCard from \"./profileCard\";\nimport DrugCard from \"./drugCard\";\nimport NavBar from './navBar';\nimport drugs from './TempData/drug';\nimport { NoverdoseRepo } from '../Api/NoverdoseRepo';\nimport { Redirect, Link } from 'react-router-dom';\nimport User from '../models/user';\nimport Drug from '../models/drug';\nexport default class MainPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.repo = new NoverdoseRepo();\n\n    this.updatePrescriptions = () => {\n      let id = this.state.id;\n      console.log(\"userid = \" + id);\n      this.repo.getPrescription(id).then(x => {\n        console.log(JSON.stringify(x.data));\n        let len = x.data.length;\n        let cPrescriptions = [];\n        let pPrescriptions = [];\n\n        for (let i = 0; i < len; i++) {\n          console.log(JSON.stringify(x.data[i]));\n\n          if (x.data[i].oldPrescription == 0) {\n            let curPrescription = new Drug(x.data[i].prescriptionID, x.data[i].name, x.data[i].price, x.data[i].DrugDescription, x.data[i].SideEffectDescription, x.data[i].pharmacy);\n            cPrescriptions.push(curPrescription);\n          } else if (x.data[i].oldPrescription == 1) {\n            let curPrescription = new Drug(x.data[i].prescriptionID, x.data[i].name, x.data[i].price, x.data[i].DrugDescription, x.data[i].SideEffectDescription, x.data[i].pharmacy);\n            pPrescriptions.push(curPrescription);\n          }\n        }\n\n        this.setState({\n          pastPrescriptions: pPrescriptions\n        });\n        this.setState({\n          currentPrescriptions: cPrescriptions\n        });\n        console.log(this.state.pastPrescriptions);\n      }).catch(x => {\n        alert(x);\n      });\n    };\n\n    this.delete = (name, id) => {\n      console.log(\"deleting[\" + name + \"]\");\n      console.log(\"deleting[\" + id + \"]\"); // let list = this.state.pastPrescriptions.concat(name);\n      // this.setState({pastPrescriptions: list})\n      // let newDrugList = this.state.currentPrescriptions.filter(function( obj ){\n      //     return obj.name !== name;\n      // });\n      // this.setState({ currentPrescriptions: newDrugList });\n\n      this.repo.updatePrescriptionByID(id); //this.setGoHomeRedirect();\n      //this.renderHome();\n    };\n\n    this.renderUserPrescriptions = () => {\n      return this.state.currentPrescriptions.map((x, y) => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(DrugCard, Object.assign({\n        key: y\n      }, x, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-lg disabled \",\n        style: {\n          margin: \"auto\"\n        },\n        onClick: () => this.delete(x.name, x.drugId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }, \"Delete Prescription\"), this.state.goHome == true && window.location.reload()));\n    };\n\n    this.setPrescriptionRedirect = () => {\n      this.setState({\n        addPrescription: true\n      });\n    };\n\n    this.setGoHomeRedirect = () => {\n      console.log(\"Inside setGoHomeRedirect\");\n      this.setState({\n        goHome: true\n      });\n    };\n\n    this.renderPrescriptionRedirect = () => {\n      let newPath = '/search/' + this.state.id;\n\n      if (this.state.addPrescription) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: newPath,\n            state: {\n              id: this.state.id\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 20\n          }\n        });\n      }\n    };\n\n    this.renderHome = () => {\n      console.log(this.state.id);\n      let newPath = '/dashboard/' + this.state.id;\n\n      if (this.state.goHome) {\n        return /*#__PURE__*/React.createElement(Link, {\n          to: {\n            pathname: newPath,\n            state: {\n              id: this.state.id\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 20\n          }\n        });\n      }\n    };\n\n    this.ifShowMessage = () => {\n      if (this.state.pastPrescriptions == '') {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }\n        }, \"You don't have any past prescription\");\n      } else {\n        let num = this.state.pastPrescriptions.length;\n        return /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 21\n          }\n        }, \"Here are \", num, \" past prescriptions you had \");\n      }\n    };\n\n    this.showButtonBasedOnSpecialist = () => {\n      console.log(this.state.specialist);\n\n      if (this.state.specialist == \"Medical Specialist\") {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-primary btn-lg \",\n          onClick: () => this.setPrescriptionRedirect(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }\n        }, \"Search Prescription\");\n      } else {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-primary btn-lg \",\n          onClick: () => this.setPrescriptionRedirect(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 21\n          }\n        }, \"Add New Prescription\");\n      }\n    };\n\n    this.createUser = () => {\n      var sampleUser = new User(this.state.id, this.state.name, this.state.email, this.state.password, this.state.birthday, this.state.specialist, this.state.profilePicUrl);\n      return sampleUser;\n    };\n\n    this.state = {\n      id: '',\n      name: '',\n      email: '',\n      password: '',\n      birthday: '',\n      specialist: 'Special',\n      profilePicUrl: 'https://quindry.com/wp-content/gallery/people/Philadelphia-business-headshot-36-Square.jpg',\n      addPrescription: false,\n      allDrugs: drugs,\n      pastPrescriptions: [],\n      currentPrescriptions: []\n    };\n  }\n\n  componentWillMount() {\n    let id = +this.props.match.params.id;\n\n    if (id) {\n      this.repo.getUserById(id).then(curuser => {\n        let rawBday = curuser.user[0].dob;\n\n        if (rawBday == null) {\n          rawBday = \"0000-00-00\";\n        }\n\n        let userType = curuser.user[0].specialist;\n        var job = \"Normal User\";\n\n        if (userType == 1) {\n          job = \"Medical Specialist\";\n        }\n\n        let bday = rawBday.slice(0, 10);\n        console.log(JSON.stringify(curuser));\n        this.setState({\n          id: curuser.user[0].id,\n          name: curuser.user[0].name,\n          email: curuser.user[0].email,\n          birthday: bday,\n          specialist: job,\n          password: curuser.user[0].password\n        });\n        this.updatePrescriptions();\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavBar, {\n      id: this.props.match.params.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"DrugCard\",\n      style: {\n        fontFamily: \"sans-serif\",\n        textAlign: \"center\",\n        background: \"whitesmoke\",\n        marginBottom: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ProfileCard, {\n      user: this.createUser(),\n      cardColor: \"#9EC0FE\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, this.renderPrescriptionRedirect(), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }\n    }, \"Past Prescription\"), this.ifShowMessage(), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group list-group-horizontal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }, this.state.pastPrescriptions.map((item, i) => /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-group-item list-group-item-light\",\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 75\n      }\n    }, item.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 25\n      }\n    }, \"Current Prescription\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-lg \",\n      onClick: () => this.setPrescriptionRedirect(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    }, \"Add New Prescription\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      style: {\n        columns: \"1\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }\n    }, this.renderUserPrescriptions())));\n  }\n\n}","map":{"version":3,"sources":["/Users/dylanweeks/Desktop/NOverdose/frontend/src/Components/mainPage.jsx"],"names":["React","ProfileCard","DrugCard","NavBar","drugs","NoverdoseRepo","Redirect","Link","User","Drug","MainPage","Component","constructor","props","repo","updatePrescriptions","id","state","console","log","getPrescription","then","x","JSON","stringify","data","len","length","cPrescriptions","pPrescriptions","i","oldPrescription","curPrescription","prescriptionID","name","price","DrugDescription","SideEffectDescription","pharmacy","push","setState","pastPrescriptions","currentPrescriptions","catch","alert","delete","updatePrescriptionByID","renderUserPrescriptions","map","y","margin","drugId","goHome","window","location","reload","setPrescriptionRedirect","addPrescription","setGoHomeRedirect","renderPrescriptionRedirect","newPath","pathname","renderHome","ifShowMessage","num","showButtonBasedOnSpecialist","specialist","createUser","sampleUser","email","password","birthday","profilePicUrl","allDrugs","componentWillMount","match","params","getUserById","curuser","rawBday","user","dob","userType","job","bday","slice","render","fontFamily","textAlign","background","marginBottom","item","columns"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ProfileCard from \"./profileCard\";\nimport DrugCard from \"./drugCard\";\nimport NavBar from './navBar';\nimport drugs from './TempData/drug';\nimport { NoverdoseRepo } from '../Api/NoverdoseRepo';\nimport { Redirect, Link} from 'react-router-dom';\nimport User from '../models/user';\nimport Drug from '../models/drug';\nexport default class MainPage extends React.Component {\n    repo = new NoverdoseRepo();\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: '',\n            name: '',\n            email: '',\n            password: '',\n            birthday: '',\n            specialist: 'Special',\n            profilePicUrl: 'https://quindry.com/wp-content/gallery/people/Philadelphia-business-headshot-36-Square.jpg',\n            addPrescription: false,\n            allDrugs: drugs,\n            pastPrescriptions: [],\n            currentPrescriptions: []\n        };\n    }\n    componentWillMount() {\n        let id = +this.props.match.params.id;\n        if (id) {\n            this.repo.getUserById(id)\n                .then(curuser => {\n                        let rawBday = curuser.user[0].dob;\n                        if (rawBday == null){\n                            rawBday = \"0000-00-00\";\n                        }\n                        let userType = curuser.user[0].specialist;\n                        var job = \"Normal User\";\n                        if(userType == 1){\n                            job = \"Medical Specialist\"\n                        }\n                    let bday = rawBday.slice(0, 10);\n                    console.log(JSON.stringify(curuser))\n                        this.setState({\n                            id: curuser.user[0].id,\n                            name: curuser.user[0].name,\n                            email: curuser.user[0].email,\n                            birthday: bday,\n                            specialist:job,\n                            password: curuser.user[0].password,\n                        })\n                        this.updatePrescriptions();\n                }\n            );\n        }\n    }\n    updatePrescriptions = () => {\n        let id = this.state.id;\n        console.log(\"userid = \" + id);\n        this.repo.getPrescription(id)\n            .then(x => {\n                console.log(JSON.stringify(x.data));\n                let len = x.data.length;\n                let cPrescriptions = [];\n                let pPrescriptions = [];\n                for(let i = 0; i < len; i++)\n                {\n                    console.log(JSON.stringify(x.data[i]));\n                    if (x.data[i].oldPrescription == 0) {\n                        let curPrescription = new Drug(\n                            x.data[i].prescriptionID,\n                            x.data[i].name,\n                            x.data[i].price,\n                            x.data[i].DrugDescription,\n                            x.data[i].SideEffectDescription,\n                            x.data[i].pharmacy)\n                        cPrescriptions.push(curPrescription);\n                    } else if (x.data[i].oldPrescription == 1) {\n                        let curPrescription = new Drug(\n                            x.data[i].prescriptionID,\n                            x.data[i].name,\n                            x.data[i].price,\n                            x.data[i].DrugDescription,\n                            x.data[i].SideEffectDescription,\n                            x.data[i].pharmacy)\n                        pPrescriptions.push(curPrescription);\n                    }\n                }\n                this.setState({pastPrescriptions: pPrescriptions});\n                this.setState({ currentPrescriptions: cPrescriptions });\n                console.log(this.state.pastPrescriptions);\n            }).catch(x=>{\n            alert(x);\n        })\n    }\n    delete=(name, id)=> {\n        console.log(\"deleting[\" + name + \"]\");\n        console.log(\"deleting[\" + id + \"]\");\n        // let list = this.state.pastPrescriptions.concat(name);\n        // this.setState({pastPrescriptions: list})\n        // let newDrugList = this.state.currentPrescriptions.filter(function( obj ){\n        //     return obj.name !== name;\n        // });\n        // this.setState({ currentPrescriptions: newDrugList });\n        this.repo.updatePrescriptionByID(id);\n        //this.setGoHomeRedirect();\n        //this.renderHome();\n    }\n    renderUserPrescriptions=()=>{\n        return(\n            this.state.currentPrescriptions.map((x, y) =>\n                <div className=\"row\">\n                    <DrugCard key={y} {...x} />\n                    <button className=\"btn btn-secondary btn-lg disabled \"\n                        style={{ margin: \"auto\" }}\n                        onClick={\n                            () => this.delete(x.name, x.drugId)\n                        }>\n                        Delete Prescription\n                    </button>\n                    {this.state.goHome == true && window.location.reload()}\n                </div>\n            )\n        );\n    }\n    setPrescriptionRedirect = () => {\n        this.setState({\n            addPrescription: true\n        })\n    }\n    setGoHomeRedirect = () => {\n        console.log(\"Inside setGoHomeRedirect\")\n        this.setState({\n            goHome: true\n        })\n    }\n    renderPrescriptionRedirect = () => {\n        let newPath = '/search/' + this.state.id;\n        if (this.state.addPrescription) {\n            return <Redirect\n                to={{\n                    pathname: newPath,\n                    state: {\n                        id: this.state.id\n                    }\n                }}\n            />\n        }\n    }\n    renderHome = () => {\n        console.log(this.state.id)\n        let newPath = '/dashboard/' + this.state.id;\n        if (this.state.goHome) {\n            return <Link\n                to={{\n                    pathname: newPath,\n                    state: {\n                        id: this.state.id\n                    }\n                }}\n            />\n        }\n    }\n    ifShowMessage = () =>{\n        if (this.state.pastPrescriptions == ''){\n            return (<p>You don't have any past prescription</p>)\n        }else{\n            let num = this.state.pastPrescriptions.length\n            return (<p>Here are {num} past prescriptions you had </p>)\n        }\n    }\n    showButtonBasedOnSpecialist=()=>{\n        console.log(this.state.specialist);\n        if (this.state.specialist == \"Medical Specialist\"){\n            return (<button className=\"btn btn-primary btn-lg \" onClick={() => this.setPrescriptionRedirect()}>Search Prescription</button>\n            )\n        }else{\n            return (<button className=\"btn btn-primary btn-lg \" onClick={() => this.setPrescriptionRedirect()}>Add New Prescription</button>\n            )\n        }\n    }\n    createUser = () => {\n        var sampleUser = new User\n        (\n            this.state.id,\n            this.state.name,\n            this.state.email,\n            this.state.password,\n            this.state.birthday,\n            this.state.specialist,\n            this.state.profilePicUrl\n        );\n        return sampleUser\n    }\n    render() {\n        return (\n            <>\n                <NavBar id={this.props.match.params.id}/>\n                <div className=\"DrugCard\" style={{\n                    fontFamily: \"sans-serif\",\n                    textAlign: \"center\",\n                    background: \"whitesmoke\",\n                    marginBottom: \"20px\"\n                }}>\n                    <ProfileCard user={this.createUser()}\n                                 cardColor={\"#9EC0FE\"} />\n                </div>\n                <div className={\"container\"}>\n                    <div className=\"text-center\">\n                        {this.renderPrescriptionRedirect()}\n                        <h1 className={\"display-6\"}>Past Prescription</h1>\n                        {this.ifShowMessage()}\n                        <ul className=\"list-group list-group-horizontal\">\n                            {this.state.pastPrescriptions.map((item, i) =><li className=\"list-group-item list-group-item-light\" key={i}>{item.name}</li>)}\n                        </ul>\n                    </div>\n                    <div className={\"container text-center\"}>\n                        <h1 className={\"display-6\"}>Current Prescription</h1>\n                        <br></br>\n                        <button className=\"btn btn-primary btn-lg \" onClick={() => this.setPrescriptionRedirect()}>Add New Prescription</button>\n                    </div>\n                    <div className=\"col\"\n                         style={{ columns: \"1\" }}>\n                        {this.renderUserPrescriptions()}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}