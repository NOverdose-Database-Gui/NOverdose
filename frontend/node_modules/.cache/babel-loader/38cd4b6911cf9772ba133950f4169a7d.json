{"ast":null,"code":"import axios from 'axios';\nimport { createHash } from 'crypto';\nexport class AccountsRepository {\n  constructor() {\n    this.url = 'http://localhost:8000';\n    this.config = {};\n  }\n\n  getAccounts() {\n    return new Promise((resolve, reject) => {\n      axios.get(`${this.url}`, this.config).then(x => resolve(x.data)).catch(x => {\n        console.log(x);\n        alert(x); // handle error\n\n        reject(x);\n      });\n    });\n  }\n\n  login(username, password) {\n    const ps = createHash('sha256');\n    ps.update(password);\n    password = ps.digest('hex');\n    console.log(\"login password\", password);\n    let obj = {\n      username: username,\n      password: password\n    };\n    console.log(\"obj: \", obj);\n    const bodyFormData = new FormData();\n    return new Promise((resolve, reject) => {\n      axios.get(`${this.url}/login`, {\n        params: {\n          username: username,\n          password: password\n        }\n      }).then(resp => resolve(resp.data)\n      /*handle receiving parent info*/\n      ).catch(resp => alert(resp));\n    });\n  }\n\n}","map":{"version":3,"sources":["/usr/src/app/src/Api/AccountsRepository.js"],"names":["axios","createHash","AccountsRepository","url","config","getAccounts","Promise","resolve","reject","get","then","x","data","catch","console","log","alert","login","username","password","ps","update","digest","obj","bodyFormData","FormData","params","resp"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,QAA3B;AAEA,OAAO,MAAMC,kBAAN,CAAyB;AAAA;AAAA,SAE5BC,GAF4B,GAEtB,uBAFsB;AAAA,SAI5BC,MAJ4B,GAInB,EAJmB;AAAA;;AAO5BC,EAAAA,WAAW,GAAG;AACV,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCR,MAAAA,KAAK,CAACS,GAAN,CAAW,GAAE,KAAKN,GAAI,EAAtB,EAAyB,KAAKC,MAA9B,EACKM,IADL,CACUC,CAAC,IAAIJ,OAAO,CAACI,CAAC,CAACC,IAAH,CADtB,EAEKC,KAFL,CAEWF,CAAC,IAAI;AACRG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;AACAK,QAAAA,KAAK,CAACL,CAAD,CAAL,CAFQ,CAEE;;AACVH,QAAAA,MAAM,CAACG,CAAD,CAAN;AACH,OANL;AAOH,KARM,CAAP;AASH;;AAEDM,EAAAA,KAAK,CAACC,QAAD,EAAWC,QAAX,EAAqB;AACtB,UAAMC,EAAE,GAAGnB,UAAU,CAAC,QAAD,CAArB;AACAmB,IAAAA,EAAE,CAACC,MAAH,CAAUF,QAAV;AACAA,IAAAA,QAAQ,GAAGC,EAAE,CAACE,MAAH,CAAU,KAAV,CAAX;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BI,QAA9B;AACA,QAAII,GAAG,GAAG;AACNL,MAAAA,QAAQ,EAAEA,QADJ;AAENC,MAAAA,QAAQ,EAAEA;AAFJ,KAAV;AAIAL,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBQ,GAArB;AACA,UAAMC,YAAY,GAAG,IAAIC,QAAJ,EAArB;AAEA,WAAO,IAAInB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCR,MAAAA,KAAK,CAACS,GAAN,CAAW,GAAE,KAAKN,GAAI,QAAtB,EAA+B;AAAEuB,QAAAA,MAAM,EAAE;AAACR,UAAAA,QAAQ,EAAEA,QAAX;AAAqBC,UAAAA,QAAQ,EAAEA;AAA/B;AAAV,OAA/B,EACCT,IADD,CACMiB,IAAI,IAAIpB,OAAO,CAACoB,IAAI,CAACf,IAAN;AAAW;AADhC,QAECC,KAFD,CAEOc,IAAI,IAAIX,KAAK,CAACW,IAAD,CAFpB;AAGH,KAJM,CAAP;AAKH;;AApC2B","sourcesContent":["import axios from 'axios';\nimport { createHash } from 'crypto';\n\nexport class AccountsRepository {\n\n    url = 'http://localhost:8000'\n\n    config = {\n    };\n\n    getAccounts() {\n        return new Promise((resolve, reject) => {\n            axios.get(`${this.url}`, this.config)\n                .then(x => resolve(x.data))\n                .catch(x => {\n                    console.log(x);\n                    alert(x); // handle error\n                    reject(x);\n                });\n        });\n    }\n\n    login(username, password) {\n        const ps = createHash('sha256');\n        ps.update(password);\n        password = ps.digest('hex');\n        console.log(\"login password\", password);\n        let obj = {\n            username: username,\n            password: password\n        };\n        console.log(\"obj: \", obj);\n        const bodyFormData = new FormData();\n\n        return new Promise((resolve, reject) => {\n            axios.get(`${this.url}/login`, { params: {username: username, password: password}})\n            .then(resp => resolve(resp.data)/*handle receiving parent info*/)\n            .catch(resp => alert(resp));\n        });\n    }\n\n}"]},"metadata":{},"sourceType":"module"}